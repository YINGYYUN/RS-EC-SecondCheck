目前的引脚定义

[LED]
PB0            LED0
PB1            LED1
PB10            LED2
PB11            LED3

[OLED]
PB8             SCL
PB9             SDA

[串口模块]
PA9             TXD
PA10            RXD

 BMP应用方法来自B站
 【【江协STM32】MPU6050姿态解算】https://www.bilibili.com/video/BV12o5vzwEPp?p=3&vd_source=befff269c2e0ef1583e2528659770521

增强说明 - 3D 可视化（进阶）:

- 文件: `D\User\main.c` 中添加了“相机视角”变换与地面网格绘制，用于将 MPU6050 的姿态（Roll/Pitch/Yaw）以平面投影的方式直观展示。
- 相机模式说明:
	- cam_mode = 0: 固定视角
	- cam_mode = 1: 自动环绕视角（默认）
	- cam_mode = 2: 跟随传感器（相机角度会随传感器偏航/俯仰变化）
- 可调整参数: `cam_yaw`, `cam_pitch`, `cam_distance`（在 `main.c` 顶部）以改变视角和透视效果。

使用与注意:
- 本实现依赖已存在的 `MPU6050` DMP 初始化与读取函数（在 `D\User\main.c` 中调用 `MPU6050_DMPInit()` 与 `MPU6050_ReadDMP()`）。
- OLED 接线: SCL -> PB8, SDA -> PB9（参考本 README 顶部）。
- 若需在硬件上交互切换视角，可在 `main.c` 中添加按键中断或串口命令来修改 `cam_mode`。

原理说明（简要）
-----------------

1) 姿态数据来源
- 本项目使用 MPU6050 的 DMP（Digital Motion Processor）接口，由 `MPU6050_DMPInit()` 初始化并通过 `MPU6050_ReadDMP()` 读取姿态数据（通常以欧拉角 Roll/Pitch/Yaw 或四元数形式提供，代码当前读取并使用 Roll、Pitch、Yaw）。

2) 从传感器坐标到世界坐标的旋转
- 传感器给出的 Roll、Pitch、Yaw 是描述传感器相对于某参考坐标系的欧拉角（以度为单位）。将 3D 空间中一个点绕三个轴旋转可以用旋转矩阵实现。代码中使用了 Z-Y-X（先绕 Z 偏航 yaw，再绕 Y 俯仰 pitch，再绕 X 横滚 roll）的组合来把局部（传感器）坐标旋转为世界坐标：
	- 先计算每个角的正弦与余弦值
	- 使用旋转矩阵将点变换（实现见 `rotate_point()`）

3) 相机变换（视角调整）
- 为了用“观察者”的角度来展示坐标系，需要把世界坐标再变换到相机坐标系（相当于把场景绕相机旋转并沿相机视线平移）。本实现先做相机俯仰（绕 X 轴），再做相机偏航（绕 Z 轴），最后沿 Z 方向平移一定距离以模拟相机与场景之间的距离（函数 `apply_camera_transform()`）。

4) 透视投影（把 3D 投影到屏幕）
- 投影步骤将相机坐标系中的 3D 点投影到 2D 屏幕。当前采用简单的透视缩放模型：scale = S / (S + z)，然后 x_screen = cx + x * scale, y_screen = cy + y * scale，其中 S 是一个缩放常数（`PROJECTION_SCALE`），(cx, cy) 为屏幕中心。z 越大会影响投影缩放，产生远近感。

5) 绘制与视觉增强
- 将投影后的点用 OLED 的 2D 绘图函数连接成三轴线并在端点绘制箭头或标记。为增强深度感，增加了一个稀疏地面网格（若干条横竖线），以及支持几种相机模式（固定 / 自动环绕 / 跟随传感器）。

6) 精度、限制与改进建议
- 欧拉角的万向锁：使用欧拉角在某些姿态下会出现万向锁问题。若需要更稳定的旋转（尤其在大角度连续旋转时），推荐使用四元数进行点旋转（若 DMP 输出四元数，可直接使用）。
- 采样与滤波：MPU6050 的原始陀螺仪与加速度计数据需要滤波（互补滤波、Madgwick 或 Mahony 等算法）或直接使用 DMP 输出已滤波的姿态，这会影响视觉平滑度与准确性。
- 性能与刷新率：OLED 分辨率与 MCU 性能限制了绘制频率。若在高速运动下需要更高帧率，考虑减少每帧绘制的像素/图元或使用更快的显示驱动。

AI 生成 / 协助声明
--------------------

本仓库中部分文档说明与代码注释由 AI 助手辅助生成与润色（例如通过 ChatGPT 等工具），作者已对生成内容进行了人工审阅与必要修改，承担最终内容与代码的全部责任。若你在使用或修改本代码时发现问题，请以人工审阅为准并提交 issue 或 PR。